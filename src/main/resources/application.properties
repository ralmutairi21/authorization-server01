spring.application.name=authorization-server


logging.level.org.springframework.security=trace
logging.level.org.springframework.jdbc.core=TRACE
#db
spring.datasource.url=jdbc:postgresql://localhost:5432/mail_portal
spring.datasource.username=postgres
spring.datasource.password=postgres

server.port=8090


# Spring Security OAuth2 Client configuration
spring.security.oauth2.client.registration.my-client.provider=keycloak
spring.security.oauth2.client.registration.my-client.client-id=auth-server-client
spring.security.oauth2.client.registration.my-client.client-secret=bUFOUIxhP1PwgfyLHxeEjUjpTP3bxl84
spring.security.oauth2.client.registration.my-client.scope=openid,profile,email
spring.security.oauth2.client.registration.my-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.my-client.redirect-uri=http://localhost:8090/login/oauth2/code/keycloak

# Keycloak provider details
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/auth/realms/auth-server/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/auth/realms/auth-server/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/auth/realms/auth-server/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/auth/realms/auth-server/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=sub




